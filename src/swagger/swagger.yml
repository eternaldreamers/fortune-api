swagger: "2.0"

info:
  title: "{{title}}"
  version: "1.0"

basePath: /

paths:
  /auth/login:
    post:
      operationId: src.proxies.auth.login
      responses:
        "200":
          description: "login user"
  /auth/logout:
    post:
      operationId: src.proxies.auth.logout
      responses:
        "200":
          description: "logout user"

  /tickets/{id}:
    get:
      operationId: src.proxies.ticket.get_one
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: "fetch a ticket by id"
  /tickets:
    get:
      operationId: src.proxies.ticket.get_many
      responses:
        "200":
          description: "fetch all tickets"
  /tickets/create:
    post:
      operationId: src.proxies.ticket.create
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/Ticket'
      responses:
        "200":
          description: "create a ticket"

  /users/{id}:
    get:
      operationId: src.proxies.user.get_one
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: "fetch a user by id"
  /users/one:
    post:
      operationId: src.proxies.user.find_one
      parameters:
        - in: body
          name: query
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: "get a user"
  /users:
    get:
      operationId: src.proxies.user.get_many
      responses:
        "200":
          description: "fetch all users"
  /users/create:
    post:
      operationId: src.proxies.user.create
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: "create a user"
  /users/delete:
    delete:
      operationId: src.proxies.user.delete
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        "200":
          description: "delete a user"

definitions:
  Ticket:
    type: object
    required:
      - type
      - message
      - author
    properties:
      type:
        type: string
      message:
        type: string
      author:
        type: string

  User:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
      admin:
        type: boolean
